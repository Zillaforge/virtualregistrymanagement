// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.205.2/containers/alpine
{
	"name": "golang",
	"build": {
		"dockerfile": "Dockerfile",
		"args": {
			// go version and arch
			"GO_VER": "1.22.4",
			"GO_ARCH": "alpine",
			// install kubectl version
			"INSTALL_KUBECTL": "false",
			"KUBECTL_VER": "1.29.1",
			// install kubebuilder version
			"INSTALL_KUBEBUILDER": "false",
			"KUBEBUILDER_VER": "3.10.0"
		}
	},
	"customizations": {
		"vscode": {
			"extensions": [
				"golang.Go",
				"GitHub.copilot",
				"isudox.vscode-jetbrains-keybindings",
			]
		}
	},
	"containerEnv": {
		"GOPROXY": "https://proxy.golang.org,http://docker-compose-goproxy-1:8078",
		"GOSUMDB": "off"
	},

	// "initializeCommand":{
	// 	"cp kubeconfig": "[ ! -z \"$(docker ps -f name=kind-control-plane -q)\" ] && docker exec kind-control-plane cat /etc/kubernetes/admin.conf > config",
	// 	"cp ca.crt": "[ ! -z \"$(docker ps -f name=kind-control-plane -q)\" ] && docker exec kind-control-plane cat /etc/kubernetes/pki/ca.crt > ca.crt",
	// 	"cp ca.key": "[ ! -z \"$(docker ps -f name=kind-control-plane -q)\" ] && docker exec kind-control-plane cat /etc/kubernetes/pki/ca.key > ca.key"
	// },
	// "postStartCommand": {
	// 	"mv kubeconfig": "mkdir -p /root/.kube && mv ${containerWorkspaceFolder}/config /root/.kube/config",
	// 	"mv ca.crt": "mv ${containerWorkspaceFolder}/ca.crt /root/ca.crt",
	// 	"mv ca.key": "mv ${containerWorkspaceFolder}/ca.key /root/ca.key"
	// },
	// docker args to run the container, connect to KinD network
	"runArgs": [
		"--network=docker-compose_pegasus"
	]
}